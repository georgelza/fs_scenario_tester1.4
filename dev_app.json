{
    "echoConfig": 0,                    # echo this file to the terminal
    "debuglevel": 3,                    # 0=no logging, up to 4 ull logging enabled
    "echojson": 0,                      # Echo output JSON to terminal
    "call_fs_api": 1,                   # Make the call to the FS Payment API endpoint
    "httpposturl": "https://dev-env.bankservafrica.prod.risk-hub.io:8443/events",
    "cert_dir": "certs",                # Directory where we will store the certs
    "cert_file": "client.crt",
    "cert_key": "client.key",
    "eventtype": "paymentRT",           # paymentRT or NRT
    "json_from_file": 1,                # if this is 0 then we generate/create fake data using seed file, other wise we rean the input_path for input
    "input_path": "json_rt_source1",    # Input directory where events/scenario's are stored                  
    "json_to_file": 1,                  # do we output created event and engineresponse to file system          
    "output_path": "json_rt_output5",   # where to write output to
    "testsize": 1,                      # when we running in generate events from seed data (json_from_file: 1), how many events to we want to create
    "sleep": 2000,                      # Milliseconds, aka 5000 => 5 seconds. this mean we will sleep between 0 and 5000 between record creates or record posts.
    "MinTransactionValue": 100,         # Whats the low end of the transaction value to generate, when creating fake events from seed
    "MaxTransactionValue": 1000,        # Whats the upper limit of the transaction value to generate, when creating fake events from seed
    "SeedFile": "rt_seed.json",         # File containing seed data.
    "EchoSeed": 0,                      # do we want to echo the see data to the console
    "IntroBadEntity": 0,                # do we want to inject bad Entities randomly
    "IntroBadPayer": 0,                 # do we want to inject bad Payers radomly
    "IntroBadAgent": 0                  # do we want to inject bad Agents randomly
}

